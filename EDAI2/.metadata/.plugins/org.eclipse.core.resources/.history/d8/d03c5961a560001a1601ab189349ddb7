package org.eda2;

public class ProblemaContadores {
	
	private ParCalles[][] pCalles;

	//filas, columnas
	public ProblemaContadores(int i, int j) {
		pCalles = new ParCalles[i][j];
		for(int a=0; i<pCalles.length; a++) {
			for(int b=0; j<pCalles[a].length; b++) {
				pCalles[a][b] = new ParCalles();
			}
		}
	}
	
	public void inicializarContadores() {
		for(int j=0; j<pCalles[0].length; j++) {
			for(int i=0; i<pCalles.length; i++) {
				if(pCalles[0].length % 2 == 0) {
					this.pCalles[i][j] = new ParCalles();
					this.pCalles[i][j].setcDerecha(new Contador());
					this.pCalles[i][j].setcIzquierda(new Contador());
					if(i == pCalles.length-1 ) this.pCalles[i][j].setcMorado(new Contador());
					else this.pCalles[i][j].setcVerde(new Contador());
					
					if(i == 0) { // no añadir verdes en la primera fila
						
					}
				} else {
					
					if( j== 0) {
						if(i == pCalles.length-1) {
							this.pCalles[i][j].setcDerecha(new Contador());
							this.pCalles[i][j].setcMorado(new Contador());
						} else {
							this.pCalles[i][j].setcDerecha(new Contador());
							this.pCalles[i][j].setcVerde(new Contador());
						}
					} else {
						if(i == pCalles.length-1) {
							this.pCalles[i][j].setcDerecha(new Contador());
							this.pCalles[i][j].setcIzquierda(new Contador());
							this.pCalles[i][j].setcMorado(new Contador());
						} else {
							this.pCalles[i][j].setcDerecha(new Contador());
							this.pCalles[i][j].setcIzquierda(new Contador());
							this.pCalles[i][j].setcVerde(new Contador());
						}
					}
				}
				
				if(i == 0) { // no añadir verdes en la primera fila
					
				}
			}
		}
	}
	
	
	public String toString() {
		String resultado = "";
		for(int i=0; i<pCalles.length; i++) {
			for(int j=0; j<pCalles[i].length; j++) {
				resultado += pCalles[i][j].toString() +"\t";

			}
			resultado += "\n";			
		}
		return resultado;
	}
	
	
	

}
